{"ast":null,"code":"var _jsxFileName = \"/Users/Ashley/Documents/GitHub/todo-list/src/TodoList.js\";\nimport React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\nimport \"./TodoList.css\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.create = this.create.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n  }\n\n  create(newTodo) {\n    this.setState(st => ({\n      todos: [...this.state.todos, newTodo]\n    }), window.localStorage.setItem(\"todos\", JSON.stringify(this.state.todos)));\n  }\n\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          task: updatedTask\n        };\n      }\n\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n\n  toggleComplete(id) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n\n  render() {\n    const todos = this.state.todos.map(todo => {\n      return /*#__PURE__*/React.createElement(Todo, {\n        key: todo.id,\n        id: todo.id,\n        task: todo.task,\n        removeTodo: this.remove,\n        updateTodo: this.update,\n        completed: todo.completed,\n        toggleTodo: this.toggleComplete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TodoList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"My Todo List\"), /*#__PURE__*/React.createElement(TodoForm, {\n      createTodo: this.create,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, todos));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/Ashley/Documents/GitHub/todo-list/src/TodoList.js"],"names":["React","Component","Todo","TodoForm","TodoList","constructor","props","state","todos","create","bind","remove","update","toggleComplete","newTodo","setState","st","window","localStorage","setItem","JSON","stringify","id","filter","todo","updatedTask","updatedTodos","map","task","completed","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\nimport \"./TodoList.css\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n    };\n    this.create = this.create.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n  }\n\n  create(newTodo) {\n    this.setState(\n      (st) => ({\n        todos: [...this.state.todos, newTodo],\n      }),\n      window.localStorage.setItem(\"todos\", JSON.stringify(this.state.todos))\n    );\n  }\n\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter((todo) => todo.id !== id),\n    });\n  }\n\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, task: updatedTask };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n\n  toggleComplete(id) {\n    const updatedTodos = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n\n  render() {\n    const todos = this.state.todos.map((todo) => {\n      return (\n        <Todo\n          key={todo.id}\n          id={todo.id}\n          task={todo.task}\n          removeTodo={this.remove}\n          updateTodo={this.update}\n          completed={todo.completed}\n          toggleTodo={this.toggleComplete}\n        />\n      );\n    });\n    return (\n      <div className=\"TodoList\">\n        <h1>My Todo List</h1>\n        <TodoForm createTodo={this.create} />\n        <ul>{todos}</ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}