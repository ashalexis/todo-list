{"ast":null,"code":"var _jsxFileName = \"/Users/Ashley/Desktop/all-the-coding-things/udemy-react/todo-list/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.create = this.create.bind(this);\n    this.remove = this.remove.bind(this);\n  }\n\n  create(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  render() {\n    const todos = this.state.todos.map(todo => {\n      return /*#__PURE__*/React.createElement(Todo, {\n        key: todo.uuid,\n        task: todo.task,\n        removeTodo: this.remove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"To Do:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, todos), /*#__PURE__*/React.createElement(TodoForm, {\n      createTodo: this.create,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/Ashley/Desktop/all-the-coding-things/udemy-react/todo-list/src/TodoList.js"],"names":["React","Component","Todo","TodoForm","TodoList","constructor","props","state","todos","create","bind","remove","newTodo","setState","id","filter","todo","render","map","uuid","task"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDD,EAAAA,MAAM,CAACG,OAAD,EAAS;AACX,SAAKC,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBI,OAAtB;AADG,KAAd;AAGH;;AAEDD,EAAAA,MAAM,CAACG,EAAD,EAAI;AACN,SAAKD,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBO,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAA5C;AADG,KAAd;AAGH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,UAAMT,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAqBF,IAAI,IAAI;AACvC,0BAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACG,IAAhB;AAAsB,QAAA,IAAI,EAAEH,IAAI,CAACI,IAAjC;AAAuC,QAAA,UAAU,EAAE,KAAKT,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFa,CAAd;AAGA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,KAAL,CAFI,eAGJ,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAKC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHI,CAAR;AAKH;;AA/B4B;;AAkCjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nclass TodoList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            todos: []\n        };\n        this.create = this.create.bind(this);\n        this.remove = this.remove.bind(this);\n    }\n\n    create(newTodo){\n        this.setState({\n            todos: [...this.state.todos, newTodo]\n        })\n    }\n\n    remove(id){\n        this.setState({\n            todos: this.state.todos.filter(todo => todo.id !== id)\n        })\n    }\n\n    render(){\n        const todos = this.state.todos.map(todo => {\n            return <Todo key={todo.uuid} task={todo.task} removeTodo={this.remove} />\n        })\n        return (<div>\n            <h1>To Do:</h1>\n            <ul>{todos}</ul>\n            <TodoForm createTodo={this.create} />\n        </div>)\n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}