{"ast":null,"code":"var _jsxFileName = \"/Users/Ashley/Desktop/all-the-coding-things/udemy-react/todo-list/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport './TodoList.css';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.create = this.create.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n  }\n\n  create(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          task: updatedTask\n        };\n      }\n\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n\n  toggleComplete(id) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    });\n    this.setState({\n      todos: updatedTodos\n    });\n  }\n\n  render() {\n    const todos = this.state.todos.map(todo => {\n      return /*#__PURE__*/React.createElement(Todo, {\n        key: todo.id,\n        id: todo.id,\n        task: todo.task,\n        removeTodo: this.remove,\n        updateTodo: this.update,\n        completed: todo.completed,\n        toggleTodo: this.toggleComplete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TodoList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"To Do:\"), /*#__PURE__*/React.createElement(TodoForm, {\n      createTodo: this.create,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/Ashley/Desktop/all-the-coding-things/udemy-react/todo-list/src/TodoList.js"],"names":["React","Component","Todo","TodoForm","TodoList","constructor","props","state","todos","create","bind","remove","update","toggleComplete","newTodo","setState","id","filter","todo","updatedTask","updatedTodos","map","task","completed","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport './TodoList.css';\n\nclass TodoList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            todos: []\n        };\n        this.create = this.create.bind(this);\n        this.remove = this.remove.bind(this);\n        this.update = this.update.bind(this);\n        this.toggleComplete = this.toggleComplete.bind(this);\n    }\n\n    create(newTodo){\n        this.setState({\n            todos: [...this.state.todos, newTodo]\n        })\n    }\n\n    remove(id){\n        this.setState({\n            todos: this.state.todos.filter(todo => todo.id !== id)\n        })\n    }\n\n    update(id, updatedTask){\n        const updatedTodos = this.state.todos.map(todo => {\n            if (todo.id === id){\n                return {...todo, task: updatedTask}\n            }\n            return todo;\n        });\n        this.setState({ todos : updatedTodos })\n    }\n    \n    toggleComplete(id){\n        const updatedTodos = this.state.todos.map(todo => {\n            if (todo.id === id){\n                return {...todo, completed: !todo.completed}\n            }\n            return todo;\n        });\n        this.setState({ todos : updatedTodos })\n    }\n\n    render(){\n        const todos = this.state.todos.map(todo => {\n            return <Todo key={todo.id} id={todo.id} task={todo.task} removeTodo={this.remove} updateTodo={this.update} completed={todo.completed} toggleTodo={this.toggleComplete}/>\n        })\n        return (<div className=\"TodoList\">\n            <h1>To Do:</h1>\n            <TodoForm createTodo={this.create} />\n            \n        </div>)\n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}