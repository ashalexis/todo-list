{"ast":null,"code":"var _jsxFileName = \"/Users/Ashley/Desktop/all-the-coding-things/udemy-react/todo-list/src/Todo.js\";\nimport React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      task: this.props.task\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleRemove() {\n    this.props.removeTodo(this.props.id);\n  }\n\n  toggleForm() {\n    this.setState({\n      isEditing: !this.state.isEditing\n    });\n  }\n\n  handleUpdate(e) {\n    e.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({\n      isEditing: false\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      task: e.target.value\n    });\n  }\n\n  render() {\n    let result;\n\n    if (this.state.isEditing) {\n      result = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleUpdate,\n        value: this.state.task,\n        name: \"task\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, \"Save\")));\n    } else {\n      result = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, \"Done\"), /*#__PURE__*/React.createElement(\"li\", {\n        className: this.props.completed ? \"completed\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, this.props.task));\n    }\n\n    return result;\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/Ashley/Desktop/all-the-coding-things/udemy-react/todo-list/src/Todo.js"],"names":["React","Component","Todo","constructor","props","state","isEditing","task","handleRemove","bind","toggleForm","handleUpdate","handleChange","removeTodo","id","setState","e","preventDefault","updateTodo","target","value","render","result","completed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AAFR,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,GAAE;AACV,SAAKJ,KAAL,CAAWS,UAAX,CAAsB,KAAKT,KAAL,CAAWU,EAAjC;AACH;;AAEDJ,EAAAA,UAAU,GAAE;AACR,SAAKK,QAAL,CAAc;AAAET,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,KAAd;AACH;;AAEDK,EAAAA,YAAY,CAACK,CAAD,EAAG;AACXA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKb,KAAL,CAAWc,UAAX,CAAsB,KAAKd,KAAL,CAAWU,EAAjC,EAAqC,KAAKT,KAAL,CAAWE,IAAhD;AACA,SAAKQ,QAAL,CAAc;AAAET,MAAAA,SAAS,EAAE;AAAb,KAAd;AACH;;AAEDM,EAAAA,YAAY,CAACI,CAAD,EAAG;AACX,SAAKD,QAAL,CAAc;AACVR,MAAAA,IAAI,EAAES,CAAC,CAACG,MAAF,CAASC;AADL,KAAd;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,MAAJ;;AACA,QAAI,KAAKjB,KAAL,CAAWC,SAAf,EAAyB;AACrBgB,MAAAA,MAAM,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN;AAAM,QAAA,QAAQ,EAAE,KAAKX,YAArB;AAAmC,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,IAArD;AAA2D,QAAA,IAAI,EAAC,MAAhE;AAAuE,QAAA,QAAQ,EAAE,KAAKK,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADM,CAAV;AAMH,KAPD,MAOO;AACHU,MAAAA,MAAM,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACV;AAAQ,QAAA,OAAO,EAAE,KAAKZ,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADU,eAEV;AAAQ,QAAA,OAAO,EAAE,KAAKF,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFU,eAGV;AAAI,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWmB,SAAX,GAAuB,WAAvB,GAAqC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyD,KAAKnB,KAAL,CAAWG,IAApE,CAHU,CAAV;AAKH;;AACD,WAAOe,MAAP;AACH;;AAlDwB;;AAqD7B,eAAepB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css'\n\nclass Todo extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isEditing: false,\n            task: this.props.task\n        }\n        this.handleRemove = this.handleRemove.bind(this);\n        this.toggleForm = this.toggleForm.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleRemove(){\n        this.props.removeTodo(this.props.id);\n    }\n\n    toggleForm(){\n        this.setState({ isEditing: !this.state.isEditing });\n    }\n\n    handleUpdate(e){\n        e.preventDefault();\n        this.props.updateTodo(this.props.id, this.state.task);\n        this.setState({ isEditing: false })\n    }\n\n    handleChange(e){\n        this.setState({\n            task: e.target.value\n        })\n    }\n\n    render(){\n        let result;\n        if (this.state.isEditing){\n            result = (<div>\n                <form onSubmit={this.handleUpdate} value={this.state.task} name=\"task\" onChange={this.handleChange}>\n                    <input type=\"text\" />\n                    <button>Save</button>\n                </form>\n            </div>)\n        } else {\n            result = (<div>\n            <button onClick={this.toggleForm}>Edit</button>\n            <button onClick={this.handleRemove}>Done</button>\n            <li className={this.props.completed ? \"completed\" : \"\"}>{this.props.task}</li>\n        </div>)\n        }\n        return result\n    }\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}