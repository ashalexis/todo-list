{"ast":null,"code":"var _jsxFileName = \"/Users/Ashley/Desktop/all-the-coding-things/udemy-react/todo-list/src/TodoForm.js\";\nimport React, { Component } from 'react';\nimport uuid from 'react-uuid';\nimport './TodoForm.css';\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.createTodo({ ...this.state,\n      id: uuid(),\n      completed: false\n    });\n    this.setState({\n      task: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"TodoForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"New Task:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Task\",\n      id: \"task\",\n      name: \"task\",\n      value: this.state.task,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Add\"));\n  }\n\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/Ashley/Desktop/all-the-coding-things/udemy-react/todo-list/src/TodoForm.js"],"names":["React","Component","uuid","TodoForm","constructor","props","state","task","handleChange","bind","handleSubmit","e","setState","target","name","value","preventDefault","createTodo","id","completed","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAG;AACX,SAAKC,QAAL,CAAc;AAAE,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAkBH,CAAC,CAACE,MAAF,CAASE;AAA7B,KAAd;AACH;;AAEDL,EAAAA,YAAY,CAACC,CAAD,EAAG;AACXA,IAAAA,CAAC,CAACK,cAAF;AACA,SAAKX,KAAL,CAAWY,UAAX,CAAsB,EAAC,GAAG,KAAKX,KAAT;AAAgBY,MAAAA,EAAE,EAAEhB,IAAI,EAAxB;AAA4BiB,MAAAA,SAAS,EAAE;AAAvC,KAAtB;AACA,SAAKP,QAAL,CAAc;AAAEL,MAAAA,IAAI,EAAC;AAAP,KAAd;AACH;;AAEDa,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,QAAQ,EAAE,KAAKV,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAsC,MAAA,EAAE,EAAC,MAAzC;AAAgD,MAAA,IAAI,EAAC,MAArD;AAA4D,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAA9E;AAAoF,MAAA,QAAQ,EAAE,KAAKC,YAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADJ;AAOH;;AA5B4B;;AA+BjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'react-uuid';\nimport './TodoForm.css';\n\nclass TodoForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            task: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e){\n        this.setState({ [e.target.name] : e.target.value })\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        this.props.createTodo({...this.state, id: uuid(), completed: false });\n        this.setState({ task:\"\" })\n    }\n\n    render(){\n        return (\n            <form className=\"TodoForm\" onSubmit={this.handleSubmit}>\n                <label htmlFor=\"task\">New Task:</label>\n                <input type=\"text\" placeholder=\"Task\" id=\"task\" name=\"task\" value={this.state.task} onChange={this.handleChange} />\n                <button>Add</button>\n            </form>\n        )\n    }\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}